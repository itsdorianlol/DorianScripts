--// Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local UIS = game:GetService("UserInputService")

local player = Players.LocalPlayer

local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
gui.Name = "MainUtilityGUI"
gui.ResetOnSpawn = false

-- Variables
local beam, att0, att1
local beamUpdateConn
local espEnabled = false
local godModeEnabled = false
local tweenSpeed = 30 -- studs per second

-- Character & RootPart references (updated on spawn)
local character = player.Character or player.CharacterAdded:Wait()
local rootPart = character:WaitForChild("HumanoidRootPart")
local spawnPosition = rootPart.Position

-- Update character refs and spawnPosition on respawn
player.CharacterAdded:Connect(function(char)
	character = char
	rootPart = character:WaitForChild("HumanoidRootPart")
	spawnPosition = rootPart.Position
end)

-- Toggle Button
local toggleBtn = Instance.new("TextButton", gui)
toggleBtn.Size = UDim2.new(0, 45, 0, 45)
toggleBtn.Position = UDim2.new(0, 10, 0.5, -22)
toggleBtn.BackgroundColor3 = Color3.new(0, 0, 0)
toggleBtn.Text = "D"
toggleBtn.Font = Enum.Font.GothamBlack
toggleBtn.TextSize = 26
toggleBtn.TextColor3 = Color3.fromRGB(0, 102, 255)
Instance.new("UICorner", toggleBtn).CornerRadius = UDim.new(1, 0)

-- Draggable UI function
local function makeDraggable(frame, handle)
	handle = handle or frame
	local dragging, dragInput, dragStart, startPos
	handle.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = frame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then dragging = false end
			end)
		end
	end)
	handle.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	UIS.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			local delta = input.Position - dragStart
			frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		end
	end)
end
makeDraggable(toggleBtn)

-- Main GUI
local main = Instance.new("Frame", gui)
main.Size = UDim2.new(0, 210, 0, 250)
main.Position = UDim2.new(0, 60, 0.5, -125)
main.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
main.Visible = false
Instance.new("UICorner", main).CornerRadius = UDim.new(0, 14)

local mainBar = Instance.new("Frame", main)
mainBar.Size = UDim2.new(1, 0, 0, 28)
mainBar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Instance.new("UICorner", mainBar).CornerRadius = UDim.new(0, 14)

local title = Instance.new("TextLabel", mainBar)
title.Size = UDim2.new(1, -10, 1, 0)
title.Position = UDim2.new(0, 5, 0, 0)
title.Text = "Made by Dorian and ChatGPT"
title.TextColor3 = Color3.new(1,1,1)
title.Font = Enum.Font.GothamBlack
title.TextSize = 15
title.BackgroundTransparency = 1
title.TextXAlignment = Enum.TextXAlignment.Left

makeDraggable(main, mainBar)

-- Create Main Buttons
local function createMainBtn(text, posY)
	local b = Instance.new("TextButton", main)
	b.Size = UDim2.new(1, -20, 0, 38)
	b.Position = UDim2.new(0, 10, 0, posY)
	b.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
	b.TextColor3 = Color3.new(1, 1, 1)
	b.Font = Enum.Font.Gotham
	b.TextSize = 20
	b.Text = text
	Instance.new("UICorner", b).CornerRadius = UDim.new(0, 8)
	return b
end

local stealBtn = createMainBtn("Steal", 40)
local espBtn = createMainBtn("ESP", 85)
local godBtn = createMainBtn("God Mode", 130)
local closeBtn = createMainBtn("Close", 175)
closeBtn.BackgroundColor3 = Color3.fromRGB(140, 20, 20)

-- Steal GUI
local steal = Instance.new("Frame", gui)
steal.Size = UDim2.new(0, 210, 0, 200)
steal.Position = UDim2.new(0, 280, 0.5, -100)
steal.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
steal.Visible = false
Instance.new("UICorner", steal).CornerRadius = UDim.new(0, 14)

local stealBar = Instance.new("Frame", steal)
stealBar.Size = UDim2.new(1, 0, 0, 28)
stealBar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Instance.new("UICorner", stealBar).CornerRadius = UDim.new(0, 14)

local stealTitle = Instance.new("TextLabel", stealBar)
stealTitle.Size = UDim2.new(1, -10, 1, 0)
stealTitle.Position = UDim2.new(0, 5, 0, 0)
stealTitle.Text = "Steal Controls"
stealTitle.TextColor3 = Color3.new(1,1,1)
stealTitle.Font = Enum.Font.GothamBlack
stealTitle.TextSize = 15
stealTitle.BackgroundTransparency = 1
stealTitle.TextXAlignment = Enum.TextXAlignment.Left

makeDraggable(steal, stealBar)

-- Steal Buttons
local function createStealBtn(text, posY)
	local b = Instance.new("TextButton", steal)
	b.Size = UDim2.new(1, -20, 0, 40)
	b.Position = UDim2.new(0, 10, 0, posY)
	b.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
	b.TextColor3 = Color3.new(1, 1, 1)
	b.Font = Enum.Font.Gotham
	b.TextSize = 20
	b.Text = text
	Instance.new("UICorner", b).CornerRadius = UDim.new(0, 8)
	return b
end

-- === Anti Hit Button in Steal Controls ===
local HEIGHT_ABOVE = 15
local SPEED = 28 -- Try 24-32 for "safe" speed
local PAUSE_MIN = 0.07
local PAUSE_MAX = 0.23
local Y_OFFSET = 0.22 -- Max random Y offset per corner

local antiHitBtn = createStealBtn("Anti Hit", 40)
antiHitBtn.BackgroundColor3 = Color3.fromRGB(100,100,180)

local antiHitActive = false
local antiHitConn

local function getStandingPart()
    local origin = rootPart.Position
    local direction = Vector3.new(0, -6, 0)
    local raycastParams = RaycastParams.new()
    raycastParams.FilterDescendantsInstances = {character}
    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
    local result = workspace:Raycast(origin, direction, raycastParams)
    if result and result.Instance then
        return result.Instance
    end
    return nil
end

local function getCorners(part)
    local cf, size = part.CFrame, part.Size
    local y = size.Y/2 + HEIGHT_ABOVE
    local corners = {
        (cf * CFrame.new(-size.X/2, y, -size.Z/2)).Position,
        (cf * CFrame.new(-size.X/2, y,  size.Z/2)).Position,
        (cf * CFrame.new( size.X/2, y,  size.Z/2)).Position,
        (cf * CFrame.new( size.X/2, y, -size.Z/2)).Position,
    }
    return corners
end

local function tweenTo(position)
    -- Add tiny random Y offset for more human-like pathing
    local yOffset = (math.random() - 0.5) * 2 * Y_OFFSET
    local newPos = Vector3.new(position.X, position.Y + yOffset, position.Z)
    local currentPos = rootPart.Position
    local dist = (newPos - currentPos).Magnitude
    local tweenTime = dist / SPEED
    local lookVector = (newPos - currentPos).Unit
    local lookAt = newPos + lookVector
    local goal = {}
    goal.CFrame = CFrame.new(newPos, lookAt)
    local tween = TweenService:Create(
        rootPart,
        TweenInfo.new(tweenTime, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut),
        goal
    )
    tween:Play()
    tween.Completed:Wait()
end

antiHitBtn.MouseButton1Click:Connect(function()
    antiHitActive = not antiHitActive
    antiHitBtn.BackgroundColor3 = antiHitActive and Color3.fromRGB(0,170,255) or Color3.fromRGB(100,100,180)
    if antiHitConn then
        antiHitConn:Disconnect()
        antiHitConn = nil
    end
    if not antiHitActive then return end

    local part = getStandingPart()
    if not part then
        antiHitBtn.Text = "Stand on a part!"
        task.wait(1.2)
        antiHitBtn.Text = "Anti Hit"
        antiHitActive = false
        antiHitBtn.BackgroundColor3 = Color3.fromRGB(100,100,180)
        return
    end
    antiHitBtn.Text = "Anti Hit (ON)"
    local corners = getCorners(part)
    local idx = 1
    antiHitConn = RunService.Heartbeat:Connect(function()
        rootPart.Velocity = Vector3.new(0,0,0)
        rootPart.CFrame = CFrame.new(rootPart.Position.X, corners[1].Y, rootPart.Position.Z)
    end)
    task.spawn(function()
        while antiHitActive do
            local nextCorner = corners[idx]
            tweenTo(nextCorner)
            task.wait(math.random() * (PAUSE_MAX - PAUSE_MIN) + PAUSE_MIN)
            idx = idx % #corners + 1
        end
        antiHitBtn.Text = "Anti Hit"
        if antiHitConn then
            antiHitConn:Disconnect()
            antiHitConn = nil
        end
    end)
end)

player.CharacterAdded:Connect(function()
    if antiHitConn then antiHitConn:Disconnect() antiHitConn = nil end
    antiHitActive = false
    antiHitBtn.BackgroundColor3 = Color3.fromRGB(100,100,180)
    antiHitBtn.Text = "Anti Hit"
end)

local skyBtn = createStealBtn("Sky", 90)

-- Sky Teleport (unchanged)
skyBtn.MouseButton1Click:Connect(function()
	if not character or not rootPart then return end

	-- Step 1: teleport 150 studs up instantly
	rootPart.CFrame = rootPart.CFrame + Vector3.new(0, 150, 0)

	-- Step 2: wait 1 second before tweening
	task.wait(1)

	local currentPos = rootPart.Position

	-- Step 3: tween horizontally to saved X,Z keeping current Y
	local tweenTarget = Vector3.new(spawnPosition.X, currentPos.Y, spawnPosition.Z)

	local distance = (rootPart.Position - tweenTarget).Magnitude
	local speed = tweenSpeed
	local duration = distance / speed

	local tweenInfo = TweenInfo.new(duration, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut)
	local tweenGoal = {CFrame = CFrame.new(tweenTarget)}
	local tween = TweenService:Create(rootPart, tweenInfo, tweenGoal)
	tween:Play()
	tween.Completed:Wait()

	-- Step 4: teleport down to original spawn Y level
	rootPart.CFrame = CFrame.new(spawnPosition)
end)

-- God Mode
local function enableGodMode()
	local hum = character and character:FindFirstChildOfClass("Humanoid")
	if hum then
		hum.Health = hum.MaxHealth
		hum:GetPropertyChangedSignal("Health"):Connect(function()
			if godModeEnabled then
				hum.Health = hum.MaxHealth
			end
		end)
	end
end

godBtn.MouseButton1Click:Connect(function()
	godModeEnabled = not godModeEnabled
	godBtn.BackgroundColor3 = godModeEnabled and Color3.fromRGB(0,170,0) or Color3.fromRGB(70,70,70)
	if godModeEnabled then enableGodMode() end
end)

-- ESP Logic
local highlightFolder = Instance.new("Folder", gui)
highlightFolder.Name = "ESPFolder"

local function createESP(char)
	if highlightFolder:FindFirstChild(char.Name) then return end
	local h = Instance.new("Highlight")
	h.Name = char.Name
	h.FillColor = Color3.new(1, 0, 0)
	h.OutlineColor = Color3.new(0, 0, 0)
	h.Adornee = char
	h.Parent = highlightFolder

	local head = char:FindFirstChild("Head")
	if head then
		local tag = Instance.new("BillboardGui", h)
		tag.Adornee = head
		tag.Size = UDim2.new(0, 100, 0, 25)
		tag.StudsOffset = Vector3.new(0, 2, 0)
		tag.AlwaysOnTop = true

		local label = Instance.new("TextLabel", tag)
		label.Size = UDim2.new(1, 0, 1, 0)
		label.BackgroundTransparency = 1
		label.Text = char.Name
		label.TextColor3 = Color3.new(1, 1, 1)
		label.TextSize = 14
		label.Font = Enum.Font.GothamBlack
		label.TextStrokeTransparency = 0
	end
end

local function refreshESP()
	highlightFolder:ClearAllChildren()
	for _, plr in ipairs(Players:GetPlayers()) do
		if plr ~= player and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
			createESP(plr.Character)
		end
	end
end

espBtn.MouseButton1Click:Connect(function()
	espEnabled = not espEnabled
	espBtn.BackgroundColor3 = espEnabled and Color3.fromRGB(0,170,0) or Color3.fromRGB(70,70,70)
	if espEnabled then
		refreshESP()
	else
		highlightFolder:ClearAllChildren()
	end
end)

task.spawn(function()
	while true do
		task.wait(10)
		if espEnabled then refreshESP() end
	end
end)

-- GUI toggles
toggleBtn.MouseButton1Click:Connect(function()
	main.Visible = not main.Visible
end)

stealBtn.MouseButton1Click:Connect(function()
	steal.Visible = not steal.Visible
end)

closeBtn.MouseButton1Click:Connect(function()
	main.Visible = false
end)